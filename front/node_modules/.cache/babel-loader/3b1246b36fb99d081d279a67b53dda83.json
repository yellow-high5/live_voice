{"ast":null,"code":"import _regeneratorRuntime from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/app/front/src/screens/Board.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { receiveLiveInfo as _receiveLiveInfo, inputVoice, receiveVoice as _receiveVoice, emitVoice as _emitVoice, toggleController as _toggleController, toggleSettings as _toggleSettings, clickMemberList as _clickMemberList, clickAwayMemberList as _clickAwayMemberList, exitLive as _exitLive } from \"../actions\";\nimport { withRouter } from \"react-router\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { BoardTopbar } from \"./components/BoardTopbar\";\nimport { BoardController } from \"./components/BoardController\";\nimport { BoardForm } from \"./components/BoardForm\";\nimport VoiceList from \"./components/VoiceList\";\nimport VoiceRandom from \"./components/VoiceRandom\";\nimport VoiceChat from \"./components/VoiceChat\";\nimport io from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      backgroundColor: \"#282c34\",\n      width: \"100vw\",\n      minHeight: \"100vh\"\n    },\n    topbar: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(12, 1fr)\",\n      backgroundColor: \"#282c34\",\n      color: \"#FFFFFF\"\n    },\n    logo: {\n      gridColumn: \"1 / 2\",\n      width: 36,\n      height: 36,\n      margin: \"5px 10px\"\n    },\n    title: {\n      display: \"flex\",\n      gridColumn: \"2 / 8\",\n      alignItems: \"center\"\n    },\n    channel: {\n      display: \"flex\",\n      gridColumn: \"8 / 13\",\n      alignItems: \"center\"\n    },\n    topbar_icon: {\n      color: \"#FFFFFF\"\n    },\n    underbar: {\n      backgroundColor: \"#282c34\",\n      color: \"#FFFFFF\",\n      top: \"auto\",\n      bottom: 0\n    },\n    icon: {\n      color: \"#FFFFFF\"\n    },\n    members_paper: {\n      backgroundColor: \"#282c34\",\n      position: \"absolute\",\n      maxHeight: 180,\n      top: 68,\n      right: 0,\n      left: 180,\n      width: 160,\n      padding: 5,\n      overflow: \"auto\",\n      zIndex: 999\n    },\n    members_paper_item: {\n      padding: 3\n    },\n    members_paper_typo: {\n      marginLeft: 5\n    },\n    live_content: {\n      position: \"fixed\",\n      top: 64,\n      width: \"100vw\",\n      height: \"calc(100vh - 144px)\"\n    },\n    display: {\n      position: \"absolute\",\n      width: \"100vw\"\n    },\n    voices_list_paper: {\n      backgroundColor: \"rgba(16,17,20, 0.5)\",\n      position: \"absolute\",\n      width: \"25vw\",\n      height: \"calc(100vh - 144px)\",\n      overflow: \"auto\",\n      direction: \"rtl\"\n    },\n    voices_chat_paper: {\n      backgroundColor: \"rgba(16,17,20, 0.5)\",\n      width: \"100vw\",\n      height: \"calc(100vh - 144px)\",\n      overflow: \"auto\",\n      direction: \"rtl\",\n      margin: \"auto\"\n    },\n    drawer: {\n      backgroundColor: \"#282c34\",\n      position: \"absolute\",\n      top: \"64px\",\n      height: \"calc(100vh - 144px)\"\n    },\n    board_control_menu: {\n      width: \"300px\",\n      height: \"100vh\",\n      color: \"#FFFFFF\",\n      boxShadow: \"10px 5px 5px 0px rgba(0,0,0,0.14)\"\n    }\n  };\n}; //ロゴ、バッジ(人数表示)、タイトル、チャンネルコード、投稿フォーム、ボタン(画像、リンク)、スタンプ\n\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.socket = io(\"http://localhost:8080/\".concat(props.channel, \"?name=\").concat(props.name));\n    _this.peerConnections = [];\n    _this.remoteVideos = [];\n    _this.video = document.getElementById('video');\n    _this.localStream = null;\n    _this.MAX_CONNECTION_COUNT = 3; //ライブ情報を受信\n\n    _this.socket.on('RECEIVE_LIVE_INFO', function (data) {\n      console.log(data);\n      props.receiveLiveInfo(data);\n    }); //メッセージを受信・更新\n\n\n    _this.socket.on('RECEIVE_VOICE', function (data) {\n      props.receiveVoice(data);\n    }); //WebRTC\n\n\n    _this.socket.on('signaling', function (data) {\n      var from = data.from;\n\n      switch (data.type) {\n        case \"cast\":\n          if (!_this.props.isPerformer) {\n            Swal.fire({\n              text: '新たにビデオライブが配信されました。',\n              type: 'warning',\n              cancelButtonColor: '#FBB03B',\n              confirmButtonText: 'Watch!'\n            }).then(function (result) {\n              if (result.value) {\n                _this.connectVideo();\n              }\n            });\n          }\n\n          break;\n\n        case \"call\":\n          _this.makeOffer(from);\n\n          break;\n\n        case \"offer\":\n          var offer = new RTCSessionDescription(data);\n\n          _this.setOffer(from, offer);\n\n          break;\n\n        case \"answer\":\n          var answer = new RTCSessionDescription(data);\n\n          _this.setAnswer(from, answer);\n\n          break;\n\n        case \"candidate\":\n          var candidate = new RTCIceCandidate(data.ice);\n          console.log(candidate);\n\n          _this.addIceCandidate(from, candidate);\n\n          break;\n\n        case \"end\":\n          if (!_this.props.isPerformer) {\n            Swal.fire({\n              text: 'ビデオ配信が終了しました。',\n              type: 'alert',\n              cancelButtonColor: '#d33',\n              confirmButtonText: 'Yes'\n            }).then(function (result) {\n              if (result.value) {\n                _this.detachVideo();\n              }\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }); //チャンネルの終了を受信\n\n\n    _this.socket.on('CLOSE_LIVE', function () {\n      Swal.fire({\n        text: 'チャンネルは終了しました！',\n        type: 'success',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'OK'\n      }).then(function (result) {\n        if (result.value) {\n          props.history.push('/');\n        }\n      });\n    }); //パフォーマーでないならビデオ接続スタート\n\n\n    if (!_this.props.isPerformer) {\n      _this.connectVideo();\n    }\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"emitBroadcast\",\n    value: function emitBroadcast(data) {\n      console.log(data);\n      console.log(this.socket);\n      this.socket.emit('signaling', data);\n\n      if (data.type === \"cast\") {\n        console.log(\"cast!!\");\n      }\n    }\n  }, {\n    key: \"emitTo\",\n    value: function emitTo(id, data) {\n      data.to = id;\n      this.socket.emit('signaling', data);\n    } // --- RTCPeerConnections ---\n\n  }, {\n    key: \"getConnectionCount\",\n    value: function getConnectionCount() {\n      return this.peerConnections.length;\n    }\n  }, {\n    key: \"canConnectMore\",\n    value: function canConnectMore() {\n      return this.getConnectionCount() < this.MAX_CONNECTION_COUNT;\n    }\n  }, {\n    key: \"isConnectedWith\",\n    value: function isConnectedWith(id) {\n      if (this.peerConnections[id]) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"addConnection\",\n    value: function addConnection(id, peer) {\n      this.peerConnections[id] = peer;\n    }\n  }, {\n    key: \"getConnection\",\n    value: function getConnection(id) {\n      var peer = this.peerConnections[id];\n      return peer;\n    }\n  }, {\n    key: \"deleteConnection\",\n    value: function deleteConnection(id) {\n      delete this.peerConnections[id];\n    }\n  }, {\n    key: \"stopConnection\",\n    value: function stopConnection(id) {\n      this.detachVideo();\n\n      if (this.isConnectedWith(id)) {\n        var peer = this.getConnection(id);\n        peer.close();\n        this.deleteConnection(id);\n      }\n    }\n  }, {\n    key: \"sendSdp\",\n    value: function sendSdp(id, sessionDescription) {\n      console.log('---sending sdp ---');\n      var data = {\n        type: sessionDescription.type,\n        sdp: sessionDescription.sdp\n      };\n      console.log('sending SDP=' + data);\n      this.emitTo(id, data);\n    }\n  }, {\n    key: \"sendIceCandidate\",\n    value: function sendIceCandidate(id, candidate) {\n      console.log('---sending ICE candidate ---');\n      var obj = {\n        type: 'candidate',\n        ice: candidate\n      };\n\n      if (this.isConnectedWith(id)) {\n        this.emitTo(id, obj);\n      } else {\n        console.warn('connection NOT EXIST or ALREADY CLOSED. so skip candidate');\n      }\n    }\n  }, {\n    key: \"prepareNewConnection\",\n    value: function prepareNewConnection(id) {\n      var _this2 = this;\n\n      var peer = new RTCPeerConnection({\n        \"iceServers\": []\n      }); // --- on get remote stream ---\n\n      peer.ontrack = function (event) {\n        var stream = event.streams[0];\n        console.log('-- peer.ontrack() stream.id=' + stream.id);\n\n        _this2.attachVideo(id, stream);\n      }; // --- on get local ICE candidate\n\n\n      peer.onicecandidate = function (evt) {\n        if (evt.candidate) {\n          console.log(evt.candidate);\n\n          _this2.sendIceCandidate(id, evt.candidate);\n        } else {\n          console.log('empty ice event');\n          console.log(_this2.peerConnections);\n        }\n      }; // --- when need to exchange SDP ---\n\n\n      peer.onnegotiationneeded = function (evt) {\n        console.log('-- onnegotiationneeded() ---');\n      }; // --- other events ----\n\n\n      peer.onicecandidateerror = function (evt) {\n        console.error('ICE candidate ERROR:', evt);\n      };\n\n      peer.onsignalingstatechange = function () {\n        console.log('== signaling status=' + peer.signalingState);\n      };\n\n      peer.oniceconnectionstatechange = function () {\n        console.log('== ice connection status=' + peer.iceConnectionState);\n\n        if (peer.iceConnectionState === 'disconnected') {\n          console.log('-- disconnected --'); //hangupVideo();\n          //???this.stopConnection(id);\n        }\n      };\n\n      peer.onicegatheringstatechange = function () {\n        console.log('==***== ice gathering state=' + peer.iceGatheringState);\n      };\n\n      peer.onconnectionstatechange = function () {\n        console.log('==***== connection state=' + peer.connectionState);\n      };\n\n      peer.onremovestream = function (event) {\n        console.log('-- peer.onremovestream()');\n\n        _this2.detachVideo();\n      }; // -- add local stream --\n\n\n      if (this.localStream) {\n        console.log('Adding local stream...');\n        var stream = this.localStream;\n        stream.getTracks().forEach(function (track) {\n          peer.addTrack(track, stream);\n          console.log(track);\n        });\n      } else {\n        console.warn('no local stream, but continue.');\n      }\n\n      return peer;\n    }\n  }, {\n    key: \"makeOffer\",\n    value: function makeOffer(id) {\n      var _this3 = this;\n\n      var peerConnection = this.prepareNewConnection(id);\n      this.addConnection(id, peerConnection);\n      peerConnection.createOffer().then(function (sessionDescription) {\n        console.log('createOffer() succsess in promise');\n        return peerConnection.setLocalDescription(sessionDescription);\n      }).then(function () {\n        console.log('setLocalDescription() succsess in promise');\n\n        _this3.sendSdp(id, peerConnection.localDescription);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"setOffer\",\n    value: function setOffer(id, sessionDescription) {\n      var _this4 = this;\n\n      var peerConnection = this.prepareNewConnection(id);\n      this.addConnection(id, peerConnection);\n      peerConnection.setRemoteDescription(sessionDescription).then(function () {\n        console.log('setRemoteDescription(offer) succsess in promise');\n\n        _this4.makeAnswer(id);\n      }).catch(function (err) {\n        console.error('setRemoteDescription(offer) ERROR: ', err);\n      });\n    }\n  }, {\n    key: \"makeAnswer\",\n    value: function makeAnswer(id) {\n      var _this5 = this;\n\n      console.log('sending Answer. Creating remote session description...');\n      var peerConnection = this.getConnection(id);\n\n      if (!peerConnection) {\n        console.error('peerConnection NOT exist!');\n        return;\n      }\n\n      peerConnection.createAnswer().then(function (sessionDescription) {\n        console.log('createAnswer() succsess in promise');\n        return peerConnection.setLocalDescription(sessionDescription);\n      }).then(function () {\n        console.log('setLocalDescription() succsess in promise'); // -- Trickle ICE の場合は、初期SDPを相手に送る --\n\n        _this5.sendSdp(id, peerConnection.localDescription); // -- Vanilla ICE の場合には、まだSDPは送らない --\n\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"setAnswer\",\n    value: function setAnswer(id, sessionDescription) {\n      var peerConnection = this.getConnection(id);\n\n      if (!peerConnection) {\n        console.error('peerConnection NOT exist!');\n        return;\n      }\n\n      peerConnection.setRemoteDescription(sessionDescription).then(function () {\n        console.log('setRemoteDescription(answer) succsess in promise');\n      }).catch(function (err) {\n        console.error('setRemoteDescription(answer) ERROR: ', err);\n      });\n    }\n  }, {\n    key: \"addIceCandidate\",\n    value: function addIceCandidate(id, candidate) {\n      if (!this.isConnectedWith(id)) {\n        console.warn('NOT CONNEDTED or ALREADY CLOSED with id=' + id + ', so ignore candidate');\n        return;\n      }\n\n      var peerConnection = this.getConnection(id);\n\n      if (peerConnection) {\n        peerConnection.addIceCandidate(candidate);\n      } else {\n        console.error('PeerConnection not exist!');\n        return;\n      }\n    } // --- video operation ---\n\n  }, {\n    key: \"attachVideo\",\n    value: function attachVideo(id, stream) {\n      console.log('attached!');\n      var video = document.getElementById('video');\n      video.srcObject = stream;\n      video.volume = 1.0;\n    }\n  }, {\n    key: \"detachVideo\",\n    value: function detachVideo() {\n      console.log('detached!');\n      var video = document.getElementById('video');\n      video.pause();\n\n      if ('srcObject' in video) {\n        video.srcObject = null;\n      } else {\n        if (video.src && video.src !== '') {\n          window.URL.revokeObjectURL(video.src);\n        }\n\n        video.src = '';\n      }\n    }\n  }, {\n    key: \"startVideo\",\n    value: function () {\n      var _startVideo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(type) {\n        var _this6 = this;\n\n        var video;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return document.getElementById('video');\n\n              case 2:\n                video = _context.sent;\n                _context.next = 5;\n                return navigator.getUserMedia;\n\n              case 5:\n                _context.t1 = _context.sent;\n\n                if (_context.t1) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.t1 = navigator.webkitGetUserMedia;\n\n              case 8:\n                _context.t0 = _context.t1;\n\n                if (_context.t0) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.t0 = window.navigator.mozGetUserMedia;\n\n              case 11:\n                navigator.getUserMedia = _context.t0;\n                _context.t2 = type;\n                _context.next = _context.t2 === \"selfy\" ? 15 : _context.t2 === \"screen\" ? 17 : 19;\n                break;\n\n              case 15:\n                navigator.getUserMedia({\n                  video: true,\n                  audio: true\n                }, function (stream) {\n                  _this6.localStream = stream;\n                  video.srcObject = stream;\n                }, function (err) {\n                  console.log(err);\n                });\n                return _context.abrupt(\"break\", 20);\n\n              case 17:\n                navigator.getUserMedia({\n                  video: {\n                    mediaSource: \"screen\"\n                  }\n                }, function (stream) {\n                  _this6.localStream = stream;\n                  video.srcObject = stream;\n                }, function (err) {\n                  console.log(err);\n                });\n                return _context.abrupt(\"break\", 20);\n\n              case 19:\n                return _context.abrupt(\"break\", 20);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function startVideo(_x) {\n        return _startVideo.apply(this, arguments);\n      }\n\n      return startVideo;\n    }()\n  }, {\n    key: \"stopVideo\",\n    value: function () {\n      var _stopVideo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var tracks, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, track;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tracks = this.localStream.getTracks();\n\n                if (tracks) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                console.warn('NO tracks');\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 7;\n\n                for (_iterator = tracks[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  track = _step.value;\n                  track.stop();\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](7);\n                _didIteratorError = true;\n                _iteratorError = _context2.t0;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.prev = 16;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 18:\n                _context2.prev = 18;\n\n                if (!_didIteratorError) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 21:\n                return _context2.finish(18);\n\n              case 22:\n                return _context2.finish(15);\n\n              case 23:\n                this.localStream = null;\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[7, 11, 15, 23], [16,, 18, 22]]);\n      }));\n\n      function stopVideo() {\n        return _stopVideo.apply(this, arguments);\n      }\n\n      return stopVideo;\n    }()\n  }, {\n    key: \"connectVideo\",\n    value: function connectVideo() {\n      if (!this.canConnectMore()) {\n        console.log('TOO MANY connections');\n      } else {\n        this.emitBroadcast({\n          type: 'call'\n        });\n      }\n    }\n  }, {\n    key: \"hangupVideo\",\n    value: function hangupVideo() {\n      console.log(this.peerConnections);\n\n      for (var id in this.peerConnections) {\n        this.stopConnection(id);\n      }\n\n      this.emitBroadcast({\n        type: 'end'\n      });\n      this.stopVideo();\n    }\n    /*WebRTCを要求する*/\n    //<button type=\"button\" onClick={() => this.connectVideo()}>start webrtc</button>\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // if(this.props.isPerformer){\n      //   Swal.fire({\n      //     text: '本当にこのライブを終了しますか？',\n      //     type: 'warning',\n      //     showCancelButton: true,\n      //     confirmButtonColor: '#3085d6',\n      //     cancelButtonColor: '#d33',\n      //     confirmButtonText: 'Yes'\n      //   }).then((result) => {\n      //     if (result.value) {\n      //       this.socket.emit('CLOSE_LIVE', this.props.channel);\n      //       this.socket.close();\n      //       this.props.exitLive();\n      //       this.props.history.push('/');\n      //     }\n      //     else {\n      //       this.props.history.push('/board');\n      //     }\n      //   })\n      // }\n      this.socket.close();\n      this.props.exitLive();\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          channel = _this$props.channel,\n          name = _this$props.name,\n          voices = _this$props.voices,\n          members = _this$props.members,\n          myvoice = _this$props.myvoice,\n          isPerformer = _this$props.isPerformer,\n          isOpenMemberList = _this$props.isOpenMemberList,\n          isOpenController = _this$props.isOpenController,\n          onSelfy = _this$props.onSelfy,\n          onScreen = _this$props.onScreen,\n          onSpeaker = _this$props.onSpeaker,\n          onVoice = _this$props.onVoice,\n          onChange = _this$props.onChange,\n          emitVoice = _this$props.emitVoice,\n          toggleController = _this$props.toggleController,\n          toggleSettings = _this$props.toggleSettings,\n          clickMemberList = _this$props.clickMemberList,\n          clickAwayMemberList = _this$props.clickAwayMemberList;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        id: \"liveSpace\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(BoardTopbar, {\n        classes: classes,\n        title: title,\n        channel: channel,\n        clickLogo: toggleController,\n        clickMike: clickMemberList,\n        clickAway: clickAwayMemberList,\n        open: isOpenMemberList,\n        members: members,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }), React.createElement(BoardController, {\n        classes: classes,\n        isPerformer: isPerformer,\n        open: isOpenController,\n        closeController: toggleController,\n        toggleSettings: toggleSettings,\n        onSelfy: onSelfy,\n        onScreen: onScreen,\n        onSpeaker: onSpeaker,\n        onVoice: onVoice,\n        startSelfy: function startSelfy() {\n          return _this7.startVideo(\"selfy\").then(function () {\n            _this7.emitBroadcast({\n              type: 'cast'\n            });\n          });\n        },\n        startScreen: function startScreen() {\n          return _this7.startVideo(\"screen\").then(function () {\n            _this7.emitBroadcast({\n              type: 'cast'\n            });\n          });\n        },\n        stopVideo: function stopVideo() {\n          return _this7.hangupVideo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.live_content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        id: \"video\",\n        autoplay: \"1\",\n        className: classes.display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }), onVoice ? onSelfy || onScreen ? React.createElement(VoiceList, {\n        classes: classes,\n        voices: voices,\n        socket: this.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }) : React.createElement(VoiceChat, {\n        classes: classes,\n        voices: voices,\n        socket: this.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }) : null), React.createElement(BoardForm, {\n        classes: classes,\n        channel: channel,\n        name: name,\n        onVoice: onVoice,\n        myvoice: myvoice,\n        sendPress: emitVoice,\n        socket: this.socket,\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    title: state.title,\n    channel: state.channel,\n    name: state.name,\n    isPerformer: state.isPerformer,\n    members: state.members,\n    myvoice: state.myvoice,\n    voices: state.voices,\n    isOpenMemberList: state.isOpenMemberList,\n    isOpenController: state.isOpenController,\n    onSelfy: state.onSelfy,\n    onScreen: state.onScreen,\n    onSpeaker: state.onSpeaker,\n    onVoice: state.onVoice\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onChange: function onChange(value) {\n      return dispatch(inputVoice(value));\n    },\n    receiveLiveInfo: function receiveLiveInfo(data) {\n      return dispatch(_receiveLiveInfo(data));\n    },\n    emitVoice: function emitVoice(data) {\n      return dispatch(_emitVoice(data));\n    },\n    toggleController: function toggleController() {\n      return dispatch(_toggleController());\n    },\n    toggleSettings: function toggleSettings(setting) {\n      return dispatch(_toggleSettings(setting));\n    },\n    clickMemberList: function clickMemberList() {\n      return dispatch(_clickMemberList());\n    },\n    clickAwayMemberList: function clickAwayMemberList() {\n      return dispatch(_clickAwayMemberList());\n    },\n    receiveVoice: function receiveVoice(data) {\n      return dispatch(_receiveVoice(data));\n    },\n    exitLive: function exitLive() {\n      return dispatch(_exitLive());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(Board)));","map":{"version":3,"sources":["/home/app/front/src/screens/Board.js"],"names":["React","connect","receiveLiveInfo","inputVoice","receiveVoice","emitVoice","toggleController","toggleSettings","clickMemberList","clickAwayMemberList","exitLive","withRouter","withStyles","BoardTopbar","BoardController","BoardForm","VoiceList","VoiceRandom","VoiceChat","io","Swal","styles","theme","container","backgroundColor","width","minHeight","topbar","display","gridTemplateColumns","color","logo","gridColumn","height","margin","title","alignItems","channel","topbar_icon","underbar","top","bottom","icon","members_paper","position","maxHeight","right","left","padding","overflow","zIndex","members_paper_item","members_paper_typo","marginLeft","live_content","voices_list_paper","direction","voices_chat_paper","drawer","board_control_menu","boxShadow","Board","props","socket","name","peerConnections","remoteVideos","video","document","getElementById","localStream","MAX_CONNECTION_COUNT","on","data","console","log","from","type","isPerformer","fire","text","cancelButtonColor","confirmButtonText","then","result","value","connectVideo","makeOffer","offer","RTCSessionDescription","setOffer","answer","setAnswer","candidate","RTCIceCandidate","ice","addIceCandidate","detachVideo","confirmButtonColor","history","push","emit","id","to","length","getConnectionCount","peer","isConnectedWith","getConnection","close","deleteConnection","sessionDescription","sdp","emitTo","obj","warn","RTCPeerConnection","ontrack","event","stream","streams","attachVideo","onicecandidate","evt","sendIceCandidate","onnegotiationneeded","onicecandidateerror","error","onsignalingstatechange","signalingState","oniceconnectionstatechange","iceConnectionState","onicegatheringstatechange","iceGatheringState","onconnectionstatechange","connectionState","onremovestream","getTracks","forEach","track","addTrack","peerConnection","prepareNewConnection","addConnection","createOffer","setLocalDescription","sendSdp","localDescription","catch","err","setRemoteDescription","makeAnswer","createAnswer","srcObject","volume","pause","src","window","URL","revokeObjectURL","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mediaSource","tracks","stop","canConnectMore","emitBroadcast","stopConnection","stopVideo","classes","voices","members","myvoice","isOpenMemberList","isOpenController","onSelfy","onScreen","onSpeaker","onVoice","onChange","startVideo","hangupVideo","Component","mapStateToProps","state","mapDispatchToProps","dispatch","setting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { receiveLiveInfo, inputVoice, receiveVoice, emitVoice, toggleController, toggleSettings, clickMemberList, clickAwayMemberList, exitLive } from \"../actions\";\n\nimport { withRouter } from \"react-router\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { BoardTopbar } from \"./components/BoardTopbar\";\nimport { BoardController } from \"./components/BoardController\";\nimport { BoardForm } from \"./components/BoardForm\";\nimport VoiceList from \"./components/VoiceList\";\nimport VoiceRandom from \"./components/VoiceRandom\";\nimport VoiceChat from \"./components/VoiceChat\";\n\nimport io from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nconst styles = theme => ({\n  container: {\n    backgroundColor: \"#282c34\",\n    width: \"100vw\",\n    minHeight: \"100vh\"\n  },\n  topbar: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    backgroundColor: \"#282c34\",\n    color: \"#FFFFFF\"\n  },\n  logo: {\n    gridColumn: \"1 / 2\",\n    width: 36,\n    height: 36,\n    margin: \"5px 10px\"\n  },\n  title: {\n    display: \"flex\",\n    gridColumn: \"2 / 8\",\n    alignItems: \"center\"\n  },\n  channel: {\n    display: \"flex\",\n    gridColumn: \"8 / 13\",\n    alignItems: \"center\"\n  },\n  topbar_icon: {\n    color: \"#FFFFFF\"\n  },\n  underbar: {\n    backgroundColor: \"#282c34\",\n    color: \"#FFFFFF\",\n    top: \"auto\",\n    bottom: 0\n  },\n  icon: {\n    color: \"#FFFFFF\"\n  },\n  members_paper: {\n    backgroundColor: \"#282c34\",\n    position: \"absolute\",\n    maxHeight: 180,\n    top: 68,\n    right: 0,\n    left: 180,\n    width: 160,\n    padding: 5,\n    overflow: \"auto\",\n    zIndex: 999,\n  },\n  members_paper_item: {\n    padding: 3,\n  },\n  members_paper_typo: {\n    marginLeft: 5,\n  },\n  live_content: {\n    position: \"fixed\",\n    top: 64,\n    width: \"100vw\",\n    height: \"calc(100vh - 144px)\",\n  },\n  display: {\n    position: \"absolute\",\n    width: \"100vw\",\n  },\n  voices_list_paper: {\n    backgroundColor: \"rgba(16,17,20, 0.5)\",\n    position: \"absolute\",\n    width: \"25vw\",\n    height: \"calc(100vh - 144px)\",\n    overflow: \"auto\",\n    direction: \"rtl\",\n  },\n  voices_chat_paper: {\n    backgroundColor: \"rgba(16,17,20, 0.5)\",\n    width: \"100vw\",\n    height: \"calc(100vh - 144px)\",\n    overflow: \"auto\",\n    direction: \"rtl\",\n    margin: \"auto\",\n  },\n  drawer: {\n    backgroundColor: \"#282c34\",\n    position: \"absolute\",\n    top: \"64px\",\n    height: \"calc(100vh - 144px)\",\n  },\n  board_control_menu: {\n    width: \"300px\",\n    height: \"100vh\",\n    color: \"#FFFFFF\",\n    boxShadow: \"10px 5px 5px 0px rgba(0,0,0,0.14)\"\n  },\n});\n\n//ロゴ、バッジ(人数表示)、タイトル、チャンネルコード、投稿フォーム、ボタン(画像、リンク)、スタンプ\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.socket = io(`http://localhost:8080/${props.channel}?name=${props.name}`);\n    this.peerConnections = [];\n    this.remoteVideos = [];\n    this.video = document.getElementById('video');\n    this.localStream = null;\n    this.MAX_CONNECTION_COUNT = 3;\n\n    //ライブ情報を受信\n    this.socket.on('RECEIVE_LIVE_INFO', (data) => {\n      console.log(data);\n      props.receiveLiveInfo(data);\n    })\n    //メッセージを受信・更新\n    this.socket.on('RECEIVE_VOICE', (data) => {\n      props.receiveVoice(data);\n    });\n    //WebRTC\n    this.socket.on('signaling', (data) => {\n      let from = data.from;\n      switch(data.type) {\n        case \"cast\":\n          if(!this.props.isPerformer){\n            Swal.fire({\n              text: '新たにビデオライブが配信されました。',\n              type: 'warning',\n              cancelButtonColor: '#FBB03B',\n              confirmButtonText: 'Watch!'\n            }).then((result) => {\n              if (result.value) {\n                this.connectVideo();\n              }\n            })\n          }\n          break;\n        case \"call\":\n          this.makeOffer(from);\n          break;\n        case \"offer\":\n          let offer = new RTCSessionDescription(data);\n          this.setOffer(from, offer);\n          break;\n        case \"answer\":\n          let answer = new RTCSessionDescription(data);\n          this.setAnswer(from, answer);\n          break;\n        case \"candidate\":\n          let candidate = new RTCIceCandidate(data.ice);\n          console.log(candidate);\n          this.addIceCandidate(from, candidate);\n          break;\n        case \"end\":\n          if(!this.props.isPerformer){\n            Swal.fire({\n              text: 'ビデオ配信が終了しました。',\n              type: 'alert',\n              cancelButtonColor: '#d33',\n              confirmButtonText: 'Yes'\n            }).then((result) => {\n              if (result.value) {\n                this.detachVideo();\n              }\n            })\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    //チャンネルの終了を受信\n    this.socket.on('CLOSE_LIVE', () => {\n      Swal.fire({\n        text: 'チャンネルは終了しました！',\n        type: 'success',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'OK'\n      }).then((result) => {\n        if (result.value) {\n          props.history.push('/');\n        }\n      })\n    });\n\n    //パフォーマーでないならビデオ接続スタート\n    if(!this.props.isPerformer){\n      this.connectVideo();\n    }\n  }\n\n  emitBroadcast(data) {\n    console.log(data);\n    console.log(this.socket);\n    this.socket.emit('signaling', data);\n    if(data.type === \"cast\"){console.log(\"cast!!\")}\n  }\n  emitTo(id, data) {\n    data.to = id;\n    this.socket.emit('signaling', data);\n  }\n\n\n  // --- RTCPeerConnections ---\n  getConnectionCount() {\n    return this.peerConnections.length;\n  }\n  canConnectMore() {\n    return (this.getConnectionCount() < this.MAX_CONNECTION_COUNT);\n  }\n  isConnectedWith(id) {\n    if (this.peerConnections[id])  {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  addConnection(id, peer) {\n    this.peerConnections[id] = peer;\n  }\n  getConnection(id) {\n    let peer = this.peerConnections[id];\n    return peer;\n  }\n  deleteConnection(id) {\n    delete this.peerConnections[id];\n  }\n  stopConnection(id) {\n    this.detachVideo();\n\n    if (this.isConnectedWith(id)) {\n      let peer = this.getConnection(id);\n      peer.close();\n      this.deleteConnection(id);\n    }\n  }\n\n  sendSdp(id, sessionDescription) {\n    console.log('---sending sdp ---');\n    let data = { type: sessionDescription.type, sdp: sessionDescription.sdp };\n    console.log('sending SDP=' + data);\n    this.emitTo(id, data);\n  }\n  sendIceCandidate(id, candidate) {\n    console.log('---sending ICE candidate ---');\n    let obj = { type: 'candidate', ice: candidate };\n    if (this.isConnectedWith(id)) {\n      this.emitTo(id, obj);\n    }\n    else {\n      console.warn('connection NOT EXIST or ALREADY CLOSED. so skip candidate')\n    }\n  }\n  prepareNewConnection(id) {\n    let peer = new RTCPeerConnection({\"iceServers\": []});\n\n    // --- on get remote stream ---\n    peer.ontrack = (event) => {\n      let stream = event.streams[0];\n      console.log('-- peer.ontrack() stream.id=' + stream.id);\n      this.attachVideo(id, stream);\n    };\n\n    // --- on get local ICE candidate\n    peer.onicecandidate = (evt) => {\n      if (evt.candidate) {\n        console.log(evt.candidate);\n        this.sendIceCandidate(id, evt.candidate);\n      } else {\n        console.log('empty ice event');\n        console.log(this.peerConnections);\n      }\n    };\n\n    // --- when need to exchange SDP ---\n    peer.onnegotiationneeded = (evt) => {\n      console.log('-- onnegotiationneeded() ---');\n    };\n\n    // --- other events ----\n    peer.onicecandidateerror = (evt) => {\n      console.error('ICE candidate ERROR:', evt);\n    };\n\n    peer.onsignalingstatechange = () => {\n      console.log('== signaling status=' + peer.signalingState);\n    };\n\n    peer.oniceconnectionstatechange = () => {\n      console.log('== ice connection status=' + peer.iceConnectionState);\n      if (peer.iceConnectionState === 'disconnected') {\n        console.log('-- disconnected --');\n        //hangupVideo();\n        //???this.stopConnection(id);\n      }\n    };\n\n    peer.onicegatheringstatechange = () => {\n      console.log('==***== ice gathering state=' + peer.iceGatheringState);\n    };\n\n    peer.onconnectionstatechange = () => {\n      console.log('==***== connection state=' + peer.connectionState);\n    };\n\n    peer.onremovestream = (event) => {\n      console.log('-- peer.onremovestream()');\n      this.detachVideo();\n    };\n\n\n    // -- add local stream --\n    if (this.localStream) {\n      console.log('Adding local stream...');\n      let stream = this.localStream;\n      stream.getTracks().forEach((track) => {\n        peer.addTrack(track, stream);\n        console.log(track)\n      });\n    }\n    else {\n      console.warn('no local stream, but continue.');\n    }\n\n    return peer;\n  }\n  makeOffer(id) {\n    let peerConnection = this.prepareNewConnection(id);\n    this.addConnection(id, peerConnection);\n    peerConnection.createOffer()\n    .then((sessionDescription) => {\n      console.log('createOffer() succsess in promise');\n      return peerConnection.setLocalDescription(sessionDescription);\n    }).then(() =>  {\n      console.log('setLocalDescription() succsess in promise');\n      this.sendSdp(id, peerConnection.localDescription);\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n  setOffer(id, sessionDescription) {\n    let peerConnection = this.prepareNewConnection(id);\n    this.addConnection(id, peerConnection);\n\n    peerConnection.setRemoteDescription(sessionDescription)\n    .then(() => {\n      console.log('setRemoteDescription(offer) succsess in promise');\n      this.makeAnswer(id);\n    }).catch((err) => {\n      console.error('setRemoteDescription(offer) ERROR: ', err);\n    });\n  }\n  makeAnswer(id) {\n    console.log('sending Answer. Creating remote session description...' );\n    let peerConnection = this.getConnection(id);\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n\n    peerConnection.createAnswer()\n    .then((sessionDescription) => {\n      console.log('createAnswer() succsess in promise');\n      return peerConnection.setLocalDescription(sessionDescription);\n    }).then(() => {\n      console.log('setLocalDescription() succsess in promise');\n\n      // -- Trickle ICE の場合は、初期SDPを相手に送る --\n      this.sendSdp(id, peerConnection.localDescription);\n\n      // -- Vanilla ICE の場合には、まだSDPは送らない --\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n  setAnswer(id, sessionDescription) {\n    let peerConnection = this.getConnection(id);\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n\n    peerConnection.setRemoteDescription(sessionDescription)\n    .then(() => {\n      console.log('setRemoteDescription(answer) succsess in promise');\n    }).catch((err) => {\n      console.error('setRemoteDescription(answer) ERROR: ', err);\n    });\n  }\n  addIceCandidate(id, candidate) {\n    if (! this.isConnectedWith(id)) {\n      console.warn('NOT CONNEDTED or ALREADY CLOSED with id=' + id + ', so ignore candidate');\n      return;\n    }\n\n    let peerConnection = this.getConnection(id);\n    if (peerConnection) {\n      peerConnection.addIceCandidate(candidate);\n    }\n    else {\n      console.error('PeerConnection not exist!');\n      return;\n    }\n  }\n\n  // --- video operation ---\n  attachVideo(id, stream) {\n    console.log('attached!');\n    let video = document.getElementById('video');\n    video.srcObject = stream;\n    video.volume = 1.0;\n  }\n  detachVideo() {\n    console.log('detached!');\n    let video = document.getElementById('video');\n    video.pause();\n    if('srcObject' in video) {\n      video.srcObject = null;\n    }\n    else {\n      if(video.src && (video.src !== '')) {\n        window.URL.revokeObjectURL(video.src);\n      }\n      video.src = '';\n    }\n  }\n  async startVideo(type) {\n    let video = await document.getElementById('video');\n    navigator.getUserMedia = await navigator.getUserMedia || navigator.webkitGetUserMedia || window.navigator.mozGetUserMedia;\n    switch(type) {\n      case \"selfy\":\n        navigator.getUserMedia({video: true, audio: true},\n          (stream) => {\n            this.localStream = stream;\n            video.srcObject = stream;\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n        break;\n      case \"screen\":\n        navigator.getUserMedia({video: {mediaSource: \"screen\"}},\n          (stream) => {\n            this.localStream = stream;\n            video.srcObject = stream;\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n        break;\n      default:\n        break;\n    }\n  }\n  async stopVideo() {\n    let tracks = this.localStream.getTracks();\n    if (! tracks) {\n      console.warn('NO tracks');\n      return;\n    }\n\n    for (let track of tracks) {\n      track.stop();\n    }\n    this.localStream = null;\n  }\n  connectVideo() {\n    if (! this.canConnectMore()) {\n      console.log('TOO MANY connections');\n    }\n    else {\n      this.emitBroadcast({type: 'call'});\n    }\n  }\n  hangupVideo() {\n    console.log(this.peerConnections);\n    for (let id in this.peerConnections) {\n      this.stopConnection(id);\n    }\n    this.emitBroadcast({type: 'end'});\n    this.stopVideo();\n  }\n  /*WebRTCを要求する*/\n  //<button type=\"button\" onClick={() => this.connectVideo()}>start webrtc</button>\n\n  componentWillUnmount() {\n    // if(this.props.isPerformer){\n    //   Swal.fire({\n    //     text: '本当にこのライブを終了しますか？',\n    //     type: 'warning',\n    //     showCancelButton: true,\n    //     confirmButtonColor: '#3085d6',\n    //     cancelButtonColor: '#d33',\n    //     confirmButtonText: 'Yes'\n    //   }).then((result) => {\n    //     if (result.value) {\n    //       this.socket.emit('CLOSE_LIVE', this.props.channel);\n    //       this.socket.close();\n    //       this.props.exitLive();\n    //       this.props.history.push('/');\n    //     }\n    //     else {\n    //       this.props.history.push('/board');\n    //     }\n    //   })\n    // }\n    this.socket.close();\n    this.props.exitLive();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {\n      classes,\n      title,\n      channel,\n      name,\n      voices,\n      members,\n      myvoice,\n      isPerformer,\n      isOpenMemberList,\n      isOpenController,\n      onSelfy,\n      onScreen,\n      onSpeaker,\n      onVoice,\n      onChange,\n      emitVoice,\n      toggleController,\n      toggleSettings,\n      clickMemberList,\n      clickAwayMemberList,\n    } = this.props;\n\n    return (\n      <div className={classes.container} id={\"liveSpace\"}>\n        <BoardTopbar\n          classes={classes}\n          title={title}\n          channel={channel}\n          clickLogo={toggleController}\n          clickMike={clickMemberList}\n          clickAway={clickAwayMemberList}\n          open={isOpenMemberList}\n          members={members}\n        />\n        <BoardController\n          classes={classes}\n          isPerformer={isPerformer}\n          open={isOpenController}\n          closeController={toggleController}\n          toggleSettings={toggleSettings}\n          onSelfy={onSelfy}\n          onScreen={onScreen}\n          onSpeaker={onSpeaker}\n          onVoice={onVoice}\n          startSelfy={() => this.startVideo(\"selfy\").then(() => {this.emitBroadcast({type: 'cast'})})}\n          startScreen={() => this.startVideo(\"screen\").then(() => {this.emitBroadcast({type: 'cast'})})}\n          stopVideo={() => this.hangupVideo()}\n        />\n        <div className={classes.live_content}>\n          <video id=\"video\" autoplay=\"1\" className={classes.display}></video>\n          {onVoice?\n            onSelfy || onScreen?\n              <VoiceList classes={classes} voices={voices} socket={this.socket} />\n              :\n              <VoiceChat classes={classes} voices={voices} socket={this.socket} />\n            :\n            null\n          }\n        </div>\n        <BoardForm\n          classes={classes}\n          channel={channel}\n          name={name}\n          onVoice={onVoice}\n          myvoice={myvoice}\n          sendPress={emitVoice}\n          socket={this.socket}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  title: state.title,\n  channel: state.channel,\n  name: state.name,\n  isPerformer: state.isPerformer,\n  members: state.members,\n  myvoice: state.myvoice,\n  voices: state.voices,\n  isOpenMemberList: state.isOpenMemberList,\n  isOpenController: state.isOpenController,\n  onSelfy: state.onSelfy,\n  onScreen: state.onScreen,\n  onSpeaker: state.onSpeaker,\n  onVoice: state.onVoice,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(inputVoice(value)),\n  receiveLiveInfo: data => dispatch(receiveLiveInfo(data)),\n  emitVoice: data => dispatch(emitVoice(data)),\n  toggleController: () => dispatch(toggleController()),\n  toggleSettings: setting => dispatch(toggleSettings(setting)),\n  clickMemberList: () => dispatch(clickMemberList()),\n  clickAwayMemberList: () => dispatch(clickAwayMemberList()),\n  receiveVoice: data => dispatch(receiveVoice(data)),\n  exitLive: () => dispatch(exitLive())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(withStyles(styles)(Board)));\n"]},"metadata":{},"sourceType":"module"}