{"ast":null,"code":"import _classCallCheck from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/app/front/src/screens/Board.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { receiveLiveInfo as _receiveLiveInfo, inputVoice, receiveVoice as _receiveVoice, emitVoice as _emitVoice, toggleController as _toggleController, clickMemberList as _clickMemberList, clickAwayMemberList as _clickAwayMemberList, exitLive as _exitLive } from \"../actions\";\nimport { withRouter } from \"react-router\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { BoardTopbar } from \"./components/BoardTopbar\";\nimport { BoardController } from \"./components/BoardController\";\nimport { BoardForm } from \"./components/BoardForm\";\nimport BoardMessage from \"./components/BoardMessage\";\nimport io from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      backgroundColor: \"#282c34\",\n      width: \"100vw\",\n      minHeight: \"100vh\"\n    },\n    topbar: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(12, 1fr)\",\n      backgroundColor: \"#282c34\",\n      color: \"#FFFFFF\"\n    },\n    logo: {\n      gridColumn: \"1 / 2\",\n      width: 36,\n      height: 36,\n      margin: \"5px 10px\"\n    },\n    title: {\n      display: \"flex\",\n      gridColumn: \"2 / 8\",\n      alignItems: \"center\"\n    },\n    channel: {\n      display: \"flex\",\n      gridColumn: \"8 / 13\",\n      alignItems: \"center\"\n    },\n    topbar_icon: {\n      color: \"#FFFFFF\"\n    },\n    underbar: {\n      backgroundColor: \"#282c34\",\n      color: \"#FFFFFF\",\n      top: \"auto\",\n      bottom: 0\n    },\n    icon: {\n      color: \"#FFFFFF\"\n    },\n    paper_list: {\n      backgroundColor: \"#282c34\",\n      position: \"absolute\",\n      maxHeight: 180,\n      top: 68,\n      right: 0,\n      left: 180,\n      width: 160,\n      padding: 5,\n      overflow: \"auto\",\n      zIndex: 999\n    },\n    paper_list_item: {\n      padding: 3\n    },\n    paper_list_typo: {\n      marginLeft: 5\n    },\n    display: {\n      position: \"fixed\",\n      width: \"100vw\",\n      height: \"calc(100vh - 144px)\"\n    },\n    board_message: {\n      position: \"relative\"\n    },\n    drawer: {\n      backgroundColor: \"#282c34\",\n      position: \"absolute\",\n      top: \"64px\",\n      height: \"calc(100vh - 144px)\"\n    },\n    board_control_menu: {\n      width: \"300px\",\n      height: \"100vh\",\n      color: \"#FFFFFF\",\n      boxShadow: \"10px 5px 5px 0px rgba(0,0,0,0.14)\"\n    }\n  };\n}; //ロゴ、バッジ(人数表示)、タイトル、チャンネルコード、投稿フォーム、ボタン(画像、リンク)、スタンプ\n\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.socket = io(\"http://localhost:8080/\".concat(props.channel, \"?name=\").concat(props.name));\n    _this.peerConnections = [];\n    _this.remoteVideos = [];\n    _this.video = document.getElementById('video');\n    _this.localStream = null;\n    _this.MAX_CONNECTION_COUNT = 3;\n\n    var makeOffer = _this.makeOffer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    var setOffer = _this.setOffer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    var setAnswer = _this.setAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    var addIceCandidate = _this.addIceCandidate.bind(_assertThisInitialized(_assertThisInitialized(_this))); //ライブ情報を受信\n\n\n    _this.socket.on('RECEIVE_LIVE_INFO', function (data) {\n      console.log(data);\n      props.receiveLiveInfo(data);\n    }); //メッセージを受信・更新\n\n\n    _this.socket.on('RECEIVE_VOICE', function (data) {\n      props.receiveVoice(data);\n    }); //WebRTC\n\n\n    _this.socket.on('signaling', function (data) {\n      var from = data.from;\n\n      switch (data.type) {\n        case \"call\":\n          makeOffer(from);\n          break;\n\n        case \"offer\":\n          var offer = new RTCSessionDescription(data);\n          setOffer(from, offer);\n          break;\n\n        case \"answer\":\n          var answer = new RTCSessionDescription(data);\n          setAnswer(from, answer);\n          break;\n\n        case \"candidate\":\n          var candidate = new RTCIceCandidate(data.ice);\n          console.log(candidate);\n          addIceCandidate(from, candidate);\n          break;\n\n        default:\n          return;\n      }\n    }); //チャンネルの終了を受信\n\n\n    _this.socket.on('CLOSE_LIVE', function () {\n      Swal.fire({\n        text: 'チャンネルは終了しました！',\n        type: 'success',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'OK'\n      }).then(function (result) {\n        if (result.value) {\n          props.history.push('/');\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"emitBroadcast\",\n    value: function emitBroadcast(data) {\n      console.log(data);\n      console.log(this.socket);\n      this.socket.emit('signaling', data);\n    }\n  }, {\n    key: \"emitTo\",\n    value: function emitTo(id, data) {\n      data.to = id;\n      this.socket.emit('signaling', data);\n    } // --- RTCPeerConnections ---\n\n  }, {\n    key: \"getConnectionCount\",\n    value: function getConnectionCount() {\n      return this.peerConnections.length;\n    }\n  }, {\n    key: \"canConnectMore\",\n    value: function canConnectMore() {\n      return this.getConnectionCount() < this.MAX_CONNECTION_COUNT;\n    }\n  }, {\n    key: \"isConnectedWith\",\n    value: function isConnectedWith(id) {\n      if (this.peerConnections[id]) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"addConnection\",\n    value: function addConnection(id, peer) {\n      this.peerConnections[id] = peer;\n    }\n  }, {\n    key: \"getConnection\",\n    value: function getConnection(id) {\n      var peer = this.peerConnections[id];\n      return peer;\n    }\n  }, {\n    key: \"deleteConnection\",\n    value: function deleteConnection(id) {\n      delete this.peerConnections[id];\n    }\n  }, {\n    key: \"stopConnection\",\n    value: function stopConnection(id) {\n      this.detachVideo(id);\n\n      if (this.isConnectedWith(id)) {\n        var peer = this.getConnection(id);\n        peer.close();\n        this.deleteConnection(id);\n      }\n    }\n  }, {\n    key: \"stopAllConnection\",\n    value: function stopAllConnection() {\n      for (var id in this.peerConnections) {\n        this.stopConnection(id);\n      }\n    } // --- video elements ---\n\n  }, {\n    key: \"attachVideo\",\n    value: function attachVideo(id, stream) {\n      var video = this.video;\n      this.playVideo(video, stream);\n      video.volume = 1.0;\n    }\n  }, {\n    key: \"detachVideo\",\n    value: function detachVideo(id) {\n      this.pauseVideo(this.video);\n    }\n  }, {\n    key: \"isRemoteVideoAttached\",\n    value: function isRemoteVideoAttached(id) {\n      if (this.remoteVideos[id]) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"getRemoteVideoElement\",\n    value: function getRemoteVideoElement(id) {\n      var video = this.remoteVideos[id];\n      return video;\n    }\n  }, {\n    key: \"startVideo\",\n    value: function startVideo() {\n      var _this2 = this;\n\n      this.getDeviceStream({\n        video: true,\n        audio: true\n      }) // audio: false <-- ontrack once, audio:true --> ontrack twice!!\n      .then(function (stream) {\n        // success\n        _this2.localStream = stream;\n\n        _this2.playVideo(_this2.video, stream);\n      }).catch(function (error) {\n        // error\n        console.error('getUserMedia error:', error);\n        return;\n      });\n    }\n  }, {\n    key: \"stopVideo\",\n    value: function stopVideo() {\n      this.pauseVideo(this.video);\n      var tracks = this.localStream.getTracks();\n\n      if (!tracks) {\n        console.warn('NO tracks');\n        return;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = tracks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var track = _step.value;\n          track.stop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.localStream = null;\n    }\n  }, {\n    key: \"getDeviceStream\",\n    value: function getDeviceStream(option) {\n      if ('getUserMedia' in navigator.mediaDevices) {\n        console.log('navigator.mediaDevices.getUserMadia');\n        return navigator.mediaDevices.getUserMedia(option);\n      } else {\n        console.log('wrap navigator.getUserMadia with Promise');\n        return new Promise(function (resolve, reject) {\n          navigator.getUserMedia(option, resolve, reject);\n        });\n      }\n    }\n  }, {\n    key: \"playVideo\",\n    value: function playVideo(element, stream) {\n      if ('srcObject' in element) {\n        element.srcObject = stream;\n      } else {\n        element.src = window.URL.createObjectURL(stream);\n      }\n\n      element.play();\n      element.volume = 0;\n    }\n  }, {\n    key: \"pauseVideo\",\n    value: function pauseVideo(element) {\n      element.pause();\n\n      if ('srcObject' in element) {\n        element.srcObject = null;\n      } else {\n        if (element.src && element.src !== '') {\n          window.URL.revokeObjectURL(element.src);\n        }\n\n        element.src = '';\n      }\n    }\n  }, {\n    key: \"sendSdp\",\n    value: function sendSdp(id, sessionDescription) {\n      console.log('---sending sdp ---');\n      var data = {\n        type: sessionDescription.type,\n        sdp: sessionDescription.sdp\n      };\n      console.log('sending SDP=' + data);\n      this.emitTo(id, data);\n    }\n  }, {\n    key: \"sendIceCandidate\",\n    value: function sendIceCandidate(id, candidate) {\n      console.log('---sending ICE candidate ---');\n      var obj = {\n        type: 'candidate',\n        ice: candidate\n      };\n\n      if (this.isConnectedWith(id)) {\n        this.emitTo(id, obj);\n      } else {\n        console.warn('connection NOT EXIST or ALREADY CLOSED. so skip candidate');\n      }\n    }\n  }, {\n    key: \"prepareNewConnection\",\n    value: function prepareNewConnection(id) {\n      var _this3 = this;\n\n      var peer = new RTCPeerConnection({\n        \"iceServers\": []\n      }); // --- on get remote stream ---\n\n      if ('ontrack' in peer) {\n        peer.ontrack = function (event) {\n          var stream = event.streams[0];\n          console.log('-- peer.ontrack() stream.id=' + stream.id);\n\n          if (_this3.isRemoteVideoAttached(id)) {\n            console.log('stream already attached, so ignore');\n          } else {\n            //playVideo(remoteVideo, stream);\n            _this3.attachVideo(id, stream);\n          }\n        };\n      } else {\n        peer.onaddstream = function (event) {\n          var stream = event.stream;\n          console.log('-- peer.onaddstream() stream.id=' + stream.id);\n\n          _this3.attachVideo(id, stream);\n        };\n      } // --- on get local ICE candidate\n\n\n      peer.onicecandidate = function (evt) {\n        if (evt.candidate) {\n          console.log(evt.candidate);\n\n          _this3.sendIceCandidate(id, evt.candidate);\n        } else {\n          console.log('empty ice event');\n        }\n      }; // --- when need to exchange SDP ---\n\n\n      peer.onnegotiationneeded = function (evt) {\n        console.log('-- onnegotiationneeded() ---');\n      }; // --- other events ----\n\n\n      peer.onicecandidateerror = function (evt) {\n        console.error('ICE candidate ERROR:', evt);\n      };\n\n      peer.onsignalingstatechange = function () {\n        console.log('== signaling status=' + peer.signalingState);\n      };\n\n      peer.oniceconnectionstatechange = function () {\n        console.log('== ice connection status=' + peer.iceConnectionState);\n\n        if (peer.iceConnectionState === 'disconnected') {\n          console.log('-- disconnected --'); //hangUp();\n\n          _this3.stopConnection(id);\n        }\n      };\n\n      peer.onicegatheringstatechange = function () {\n        console.log('==***== ice gathering state=' + peer.iceGatheringState);\n      };\n\n      peer.onconnectionstatechange = function () {\n        console.log('==***== connection state=' + peer.connectionState);\n      };\n\n      peer.onremovestream = function (event) {\n        console.log('-- peer.onremovestream()'); //pauseVideo(remoteVideo);\n\n        _this3.detachVideo(id);\n      }; // -- add local stream --\n\n\n      if (this.localStream) {\n        console.log('Adding local stream...');\n        peer.addStream(this.localStream);\n      } else {\n        console.warn('no local stream, but continue.');\n      }\n\n      return peer;\n    }\n  }, {\n    key: \"makeOffer\",\n    value: function makeOffer(id) {\n      var _this4 = this;\n\n      var peerConnection = this.prepareNewConnection(id);\n      this.addConnection(id, peerConnection);\n      peerConnection.createOffer().then(function (sessionDescription) {\n        console.log('createOffer() succsess in promise');\n        return peerConnection.setLocalDescription(sessionDescription);\n      }).then(function () {\n        console.log('setLocalDescription() succsess in promise');\n\n        _this4.sendSdp(id, peerConnection.localDescription);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"setOffer\",\n    value: function setOffer(id, sessionDescription) {\n      var _this5 = this;\n\n      var peerConnection = this.prepareNewConnection(id);\n      this.addConnection(id, peerConnection);\n      peerConnection.setRemoteDescription(sessionDescription).then(function () {\n        console.log('setRemoteDescription(offer) succsess in promise');\n\n        _this5.makeAnswer(id);\n      }).catch(function (err) {\n        console.error('setRemoteDescription(offer) ERROR: ', err);\n      });\n    }\n  }, {\n    key: \"makeAnswer\",\n    value: function makeAnswer(id) {\n      var _this6 = this;\n\n      console.log('sending Answer. Creating remote session description...');\n      var peerConnection = this.getConnection(id);\n\n      if (!peerConnection) {\n        console.error('peerConnection NOT exist!');\n        return;\n      }\n\n      peerConnection.createAnswer().then(function (sessionDescription) {\n        console.log('createAnswer() succsess in promise');\n        return peerConnection.setLocalDescription(sessionDescription);\n      }).then(function () {\n        console.log('setLocalDescription() succsess in promise'); // -- Trickle ICE の場合は、初期SDPを相手に送る --\n\n        _this6.sendSdp(id, peerConnection.localDescription); // -- Vanilla ICE の場合には、まだSDPは送らない --\n\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"setAnswer\",\n    value: function setAnswer(id, sessionDescription) {\n      var peerConnection = this.getConnection(id);\n\n      if (!peerConnection) {\n        console.error('peerConnection NOT exist!');\n        return;\n      }\n\n      peerConnection.setRemoteDescription(sessionDescription).then(function () {\n        console.log('setRemoteDescription(answer) succsess in promise');\n      }).catch(function (err) {\n        console.error('setRemoteDescription(answer) ERROR: ', err);\n      });\n    }\n  }, {\n    key: \"addIceCandidate\",\n    value: function addIceCandidate(id, candidate) {\n      if (!this.isConnectedWith(id)) {\n        console.warn('NOT CONNEDTED or ALREADY CLOSED with id=' + id + ', so ignore candidate');\n        return;\n      }\n\n      var peerConnection = this.getConnection(id);\n\n      if (peerConnection) {\n        peerConnection.addIceCandidate(candidate);\n      } else {\n        console.error('PeerConnection not exist!');\n        return;\n      }\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (!this.canConnectMore()) {\n        console.log('TOO MANY connections');\n      } else {\n        this.callMe();\n      }\n    }\n  }, {\n    key: \"hangUp\",\n    value: function hangUp() {\n      this.stopAllConnection();\n    }\n  }, {\n    key: \"callMe\",\n    value: function callMe() {\n      this.emitBroadcast({\n        type: 'call'\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // if(this.props.isPerformer){\n      //   Swal.fire({\n      //     text: '本当にこのライブを終了しますか？',\n      //     type: 'warning',\n      //     showCancelButton: true,\n      //     confirmButtonColor: '#3085d6',\n      //     cancelButtonColor: '#d33',\n      //     confirmButtonText: 'Yes'\n      //   }).then((result) => {\n      //     if (result.value) {\n      //       this.socket.emit('CLOSE_LIVE', this.props.channel);\n      //       this.socket.close();\n      //       this.props.exitLive();\n      //       this.props.history.push('/');\n      //     }\n      //     else {\n      //       this.props.history.push('/board');\n      //     }\n      //   })\n      // }\n      this.socket.close();\n      this.props.exitLive();\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          channel = _this$props.channel,\n          name = _this$props.name,\n          voices = _this$props.voices,\n          members = _this$props.members,\n          myvoice = _this$props.myvoice,\n          isPerformer = _this$props.isPerformer,\n          isOpenController = _this$props.isOpenController,\n          isOpenMemberList = _this$props.isOpenMemberList,\n          onChange = _this$props.onChange,\n          emitVoice = _this$props.emitVoice,\n          toggleController = _this$props.toggleController,\n          clickMemberList = _this$props.clickMemberList,\n          clickAwayMemberList = _this$props.clickAwayMemberList;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        id: \"liveSpace\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(BoardTopbar, {\n        classes: classes,\n        title: title,\n        channel: channel,\n        isPerformer: isPerformer,\n        clickLogo: toggleController,\n        clickMike: clickMemberList,\n        clickAway: clickAwayMemberList,\n        open: isOpenMemberList,\n        members: members,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }), React.createElement(BoardController, {\n        classes: classes,\n        open: isOpenController,\n        closeController: toggleController,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this7.connect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, \"start webrtc\"), React.createElement(\"video\", {\n        id: \"video\",\n        autoplay: \"1\",\n        className: classes.display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.board_message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, voices.map(function (voice) {\n        return React.createElement(BoardMessage, {\n          voice: voice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        });\n      })), React.createElement(BoardForm, {\n        classes: classes,\n        channel: channel,\n        name: name,\n        myvoice: myvoice,\n        sendPress: emitVoice,\n        socket: this.socket,\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    title: state.title,\n    channel: state.channel,\n    name: state.name,\n    isPerformer: state.isPerformer,\n    members: state.members,\n    myvoice: state.myvoice,\n    voices: state.voices,\n    isOpenController: state.isOpenController,\n    isOpenMemberList: state.isOpenMemberList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onChange: function onChange(value) {\n      return dispatch(inputVoice(value));\n    },\n    receiveLiveInfo: function receiveLiveInfo(data) {\n      return dispatch(_receiveLiveInfo(data));\n    },\n    emitVoice: function emitVoice(data) {\n      return dispatch(_emitVoice(data));\n    },\n    toggleController: function toggleController() {\n      return dispatch(_toggleController());\n    },\n    clickMemberList: function clickMemberList() {\n      return dispatch(_clickMemberList());\n    },\n    clickAwayMemberList: function clickAwayMemberList() {\n      return dispatch(_clickAwayMemberList());\n    },\n    receiveVoice: function receiveVoice(data) {\n      return dispatch(_receiveVoice(data));\n    },\n    exitLive: function exitLive() {\n      return dispatch(_exitLive());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(Board)));","map":{"version":3,"sources":["/home/app/front/src/screens/Board.js"],"names":["React","connect","receiveLiveInfo","inputVoice","receiveVoice","emitVoice","toggleController","clickMemberList","clickAwayMemberList","exitLive","withRouter","withStyles","BoardTopbar","BoardController","BoardForm","BoardMessage","io","Swal","styles","theme","container","backgroundColor","width","minHeight","topbar","display","gridTemplateColumns","color","logo","gridColumn","height","margin","title","alignItems","channel","topbar_icon","underbar","top","bottom","icon","paper_list","position","maxHeight","right","left","padding","overflow","zIndex","paper_list_item","paper_list_typo","marginLeft","board_message","drawer","board_control_menu","boxShadow","Board","props","socket","name","peerConnections","remoteVideos","video","document","getElementById","localStream","MAX_CONNECTION_COUNT","makeOffer","bind","setOffer","setAnswer","addIceCandidate","on","data","console","log","from","type","offer","RTCSessionDescription","answer","candidate","RTCIceCandidate","ice","fire","text","confirmButtonColor","confirmButtonText","then","result","value","history","push","emit","id","to","length","getConnectionCount","peer","detachVideo","isConnectedWith","getConnection","close","deleteConnection","stopConnection","stream","playVideo","volume","pauseVideo","getDeviceStream","audio","catch","error","tracks","getTracks","warn","track","stop","option","navigator","mediaDevices","getUserMedia","Promise","resolve","reject","element","srcObject","src","window","URL","createObjectURL","play","pause","revokeObjectURL","sessionDescription","sdp","emitTo","obj","RTCPeerConnection","ontrack","event","streams","isRemoteVideoAttached","attachVideo","onaddstream","onicecandidate","evt","sendIceCandidate","onnegotiationneeded","onicecandidateerror","onsignalingstatechange","signalingState","oniceconnectionstatechange","iceConnectionState","onicegatheringstatechange","iceGatheringState","onconnectionstatechange","connectionState","onremovestream","addStream","peerConnection","prepareNewConnection","addConnection","createOffer","setLocalDescription","sendSdp","localDescription","err","setRemoteDescription","makeAnswer","createAnswer","canConnectMore","callMe","stopAllConnection","emitBroadcast","classes","voices","members","myvoice","isPerformer","isOpenController","isOpenMemberList","onChange","map","voice","Component","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { receiveLiveInfo, inputVoice, receiveVoice, emitVoice, toggleController, clickMemberList, clickAwayMemberList, exitLive } from \"../actions\";\n\nimport { withRouter } from \"react-router\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { BoardTopbar } from \"./components/BoardTopbar\";\nimport { BoardController } from \"./components/BoardController\";\nimport { BoardForm } from \"./components/BoardForm\";\nimport BoardMessage from \"./components/BoardMessage\";\n\nimport io from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nconst styles = theme => ({\n  container: {\n    backgroundColor: \"#282c34\",\n    width: \"100vw\",\n    minHeight: \"100vh\"\n  },\n  topbar: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    backgroundColor: \"#282c34\",\n    color: \"#FFFFFF\"\n  },\n  logo: {\n    gridColumn: \"1 / 2\",\n    width: 36,\n    height: 36,\n    margin: \"5px 10px\"\n  },\n  title: {\n    display: \"flex\",\n    gridColumn: \"2 / 8\",\n    alignItems: \"center\"\n  },\n  channel: {\n    display: \"flex\",\n    gridColumn: \"8 / 13\",\n    alignItems: \"center\"\n  },\n  topbar_icon: {\n    color: \"#FFFFFF\"\n  },\n  underbar: {\n    backgroundColor: \"#282c34\",\n    color: \"#FFFFFF\",\n    top: \"auto\",\n    bottom: 0\n  },\n  icon: {\n    color: \"#FFFFFF\"\n  },\n  paper_list: {\n    backgroundColor: \"#282c34\",\n    position: \"absolute\",\n    maxHeight: 180,\n    top: 68,\n    right: 0,\n    left: 180,\n    width: 160,\n    padding: 5,\n    overflow: \"auto\",\n    zIndex: 999,\n  },\n  paper_list_item: {\n    padding: 3,\n  },\n  paper_list_typo: {\n    marginLeft: 5,\n  },\n  display: {\n    position: \"fixed\",\n    width: \"100vw\",\n    height: \"calc(100vh - 144px)\",\n  },\n  board_message: {\n    position: \"relative\"\n  },\n  drawer: {\n    backgroundColor: \"#282c34\",\n    position: \"absolute\",\n    top: \"64px\",\n    height: \"calc(100vh - 144px)\",\n  },\n  board_control_menu: {\n    width: \"300px\",\n    height: \"100vh\",\n    color: \"#FFFFFF\",\n    boxShadow: \"10px 5px 5px 0px rgba(0,0,0,0.14)\"\n  },\n});\n\n//ロゴ、バッジ(人数表示)、タイトル、チャンネルコード、投稿フォーム、ボタン(画像、リンク)、スタンプ\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.socket = io(`http://localhost:8080/${props.channel}?name=${props.name}`);\n    this.peerConnections = [];\n    this.remoteVideos = [];\n    this.video = document.getElementById('video');\n    this.localStream = null;\n    this.MAX_CONNECTION_COUNT = 3;\n\n    let makeOffer = this.makeOffer.bind(this);\n    let setOffer = this.setOffer.bind(this);\n    let setAnswer = this.setAnswer.bind(this);\n    let addIceCandidate = this.addIceCandidate.bind(this);\n\n    //ライブ情報を受信\n    this.socket.on('RECEIVE_LIVE_INFO', function(data) {\n      console.log(data);\n      props.receiveLiveInfo(data);\n    })\n    //メッセージを受信・更新\n    this.socket.on('RECEIVE_VOICE', function(data) {\n      props.receiveVoice(data);\n    });\n    //WebRTC\n    this.socket.on('signaling', function(data) {\n      let from = data.from;\n      switch(data.type) {\n        case \"call\":\n          makeOffer(from);\n          break;\n        case \"offer\":\n          let offer = new RTCSessionDescription(data);\n          setOffer(from, offer);\n          break;\n        case \"answer\":\n          let answer = new RTCSessionDescription(data);\n          setAnswer(from, answer);\n          break;\n        case \"candidate\":\n          let candidate = new RTCIceCandidate(data.ice);\n          console.log(candidate);\n          addIceCandidate(from, candidate);\n          break;\n        default:\n          return;\n      }\n    });\n    //チャンネルの終了を受信\n    this.socket.on('CLOSE_LIVE', function() {\n      Swal.fire({\n        text: 'チャンネルは終了しました！',\n        type: 'success',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'OK'\n      }).then((result) => {\n        if (result.value) {\n          props.history.push('/');\n        }\n      })\n    });\n  }\n\n  emitBroadcast(data) {\n    console.log(data);\n    console.log(this.socket);\n    this.socket.emit('signaling', data);\n  }\n  emitTo(id, data) {\n    data.to = id;\n    this.socket.emit('signaling', data);\n  }\n\n\n  // --- RTCPeerConnections ---\n  getConnectionCount() {\n    return this.peerConnections.length;\n  }\n  canConnectMore() {\n    return (this.getConnectionCount() < this.MAX_CONNECTION_COUNT);\n  }\n  isConnectedWith(id) {\n    if (this.peerConnections[id])  {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  addConnection(id, peer) {\n    this.peerConnections[id] = peer;\n  }\n  getConnection(id) {\n    let peer = this.peerConnections[id];\n    return peer;\n  }\n  deleteConnection(id) {\n    delete this.peerConnections[id];\n  }\n  stopConnection(id) {\n    this.detachVideo(id);\n\n    if (this.isConnectedWith(id)) {\n      let peer = this.getConnection(id);\n      peer.close();\n      this.deleteConnection(id);\n    }\n  }\n  stopAllConnection() {\n    for (let id in this.peerConnections) {\n      this.stopConnection(id);\n    }\n  }\n\n  // --- video elements ---\n  attachVideo(id, stream) {\n    let video = this.video;\n    this.playVideo(video, stream);\n    video.volume = 1.0;\n  }\n  detachVideo(id) {\n    this.pauseVideo(this.video);\n  }\n  isRemoteVideoAttached(id) {\n    if (this.remoteVideos[id]) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  getRemoteVideoElement(id) {\n    let video = this.remoteVideos[id];\n    return video;\n  }\n  startVideo() {\n    this.getDeviceStream({video: true, audio: true}) // audio: false <-- ontrack once, audio:true --> ontrack twice!!\n    .then((stream) => { // success\n      this.localStream = stream;\n      this.playVideo(this.video, stream);\n    }).catch((error) => { // error\n      console.error('getUserMedia error:', error);\n      return;\n    });\n  }\n  stopVideo() {\n    this.pauseVideo(this.video);\n    let tracks = this.localStream.getTracks();\n    if (! tracks) {\n      console.warn('NO tracks');\n      return;\n    }\n\n    for (let track of tracks) {\n      track.stop();\n    }\n    this.localStream = null;\n  }\n  getDeviceStream(option) {\n    if ('getUserMedia' in navigator.mediaDevices) {\n      console.log('navigator.mediaDevices.getUserMadia');\n      return navigator.mediaDevices.getUserMedia(option);\n    }\n    else {\n      console.log('wrap navigator.getUserMadia with Promise');\n      return new Promise((resolve, reject) => {\n        navigator.getUserMedia(option,\n          resolve,\n          reject\n        );\n      });\n    }\n  }\n  playVideo(element, stream) {\n    if ('srcObject' in element) {\n      element.srcObject = stream;\n    }\n    else {\n      element.src = window.URL.createObjectURL(stream);\n    }\n    element.play();\n    element.volume = 0;\n  }\n  pauseVideo(element) {\n    element.pause();\n    if ('srcObject' in element) {\n      element.srcObject = null;\n    }\n    else {\n      if (element.src && (element.src !== '') ) {\n        window.URL.revokeObjectURL(element.src);\n      }\n      element.src = '';\n    }\n  }\n\n  sendSdp(id, sessionDescription) {\n    console.log('---sending sdp ---');\n    let data = { type: sessionDescription.type, sdp: sessionDescription.sdp };\n    console.log('sending SDP=' + data);\n    this.emitTo(id, data);\n  }\n  sendIceCandidate(id, candidate) {\n    console.log('---sending ICE candidate ---');\n    let obj = { type: 'candidate', ice: candidate };\n    if (this.isConnectedWith(id)) {\n      this.emitTo(id, obj);\n    }\n    else {\n      console.warn('connection NOT EXIST or ALREADY CLOSED. so skip candidate')\n    }\n  }\n  prepareNewConnection(id) {\n    let peer = new RTCPeerConnection({\"iceServers\":[]});\n\n    // --- on get remote stream ---\n    if ('ontrack' in peer) {\n      peer.ontrack = (event) => {\n        let stream = event.streams[0];\n        console.log('-- peer.ontrack() stream.id=' + stream.id);\n        if (this.isRemoteVideoAttached(id)) {\n          console.log('stream already attached, so ignore');\n        }\n        else {\n          //playVideo(remoteVideo, stream);\n          this.attachVideo(id, stream);\n        }\n      };\n    }\n    else {\n      peer.onaddstream = (event) => {\n        let stream = event.stream;\n        console.log('-- peer.onaddstream() stream.id=' + stream.id);\n        this.attachVideo(id, stream);\n      };\n    }\n\n    // --- on get local ICE candidate\n    peer.onicecandidate = (evt) => {\n      if (evt.candidate) {\n        console.log(evt.candidate);\n        this.sendIceCandidate(id, evt.candidate);\n      } else {\n        console.log('empty ice event');\n      }\n    };\n\n    // --- when need to exchange SDP ---\n    peer.onnegotiationneeded = (evt) => {\n      console.log('-- onnegotiationneeded() ---');\n    };\n\n    // --- other events ----\n    peer.onicecandidateerror = (evt) => {\n      console.error('ICE candidate ERROR:', evt);\n    };\n\n    peer.onsignalingstatechange = () => {\n      console.log('== signaling status=' + peer.signalingState);\n    };\n\n    peer.oniceconnectionstatechange = () => {\n      console.log('== ice connection status=' + peer.iceConnectionState);\n      if (peer.iceConnectionState === 'disconnected') {\n        console.log('-- disconnected --');\n        //hangUp();\n        this.stopConnection(id);\n      }\n    };\n\n    peer.onicegatheringstatechange = () => {\n      console.log('==***== ice gathering state=' + peer.iceGatheringState);\n    };\n\n    peer.onconnectionstatechange = () => {\n      console.log('==***== connection state=' + peer.connectionState);\n    };\n\n    peer.onremovestream = (event) => {\n      console.log('-- peer.onremovestream()');\n      //pauseVideo(remoteVideo);\n      this.detachVideo(id);\n    };\n\n\n    // -- add local stream --\n    if (this.localStream) {\n      console.log('Adding local stream...');\n      peer.addStream(this.localStream);\n    }\n    else {\n      console.warn('no local stream, but continue.');\n    }\n\n    return peer;\n  }\n  makeOffer(id) {\n    let peerConnection = this.prepareNewConnection(id);\n    this.addConnection(id, peerConnection);\n    peerConnection.createOffer()\n    .then((sessionDescription) => {\n      console.log('createOffer() succsess in promise');\n      return peerConnection.setLocalDescription(sessionDescription);\n    }).then(() =>  {\n      console.log('setLocalDescription() succsess in promise');\n      this.sendSdp(id, peerConnection.localDescription);\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n  setOffer(id, sessionDescription) {\n    let peerConnection = this.prepareNewConnection(id);\n    this.addConnection(id, peerConnection);\n\n    peerConnection.setRemoteDescription(sessionDescription)\n    .then(() => {\n      console.log('setRemoteDescription(offer) succsess in promise');\n      this.makeAnswer(id);\n    }).catch((err) => {\n      console.error('setRemoteDescription(offer) ERROR: ', err);\n    });\n  }\n  makeAnswer(id) {\n    console.log('sending Answer. Creating remote session description...' );\n    let peerConnection = this.getConnection(id);\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n\n    peerConnection.createAnswer()\n    .then((sessionDescription) => {\n      console.log('createAnswer() succsess in promise');\n      return peerConnection.setLocalDescription(sessionDescription);\n    }).then(() => {\n      console.log('setLocalDescription() succsess in promise');\n\n      // -- Trickle ICE の場合は、初期SDPを相手に送る --\n      this.sendSdp(id, peerConnection.localDescription);\n\n      // -- Vanilla ICE の場合には、まだSDPは送らない --\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n  setAnswer(id, sessionDescription) {\n    let peerConnection = this.getConnection(id);\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n\n    peerConnection.setRemoteDescription(sessionDescription)\n    .then(() => {\n      console.log('setRemoteDescription(answer) succsess in promise');\n    }).catch((err) => {\n      console.error('setRemoteDescription(answer) ERROR: ', err);\n    });\n  }\n  addIceCandidate(id, candidate) {\n    if (! this.isConnectedWith(id)) {\n      console.warn('NOT CONNEDTED or ALREADY CLOSED with id=' + id + ', so ignore candidate');\n      return;\n    }\n\n    let peerConnection = this.getConnection(id);\n    if (peerConnection) {\n      peerConnection.addIceCandidate(candidate);\n    }\n    else {\n      console.error('PeerConnection not exist!');\n      return;\n    }\n  }\n  connect() {\n\n    if (! this.canConnectMore()) {\n      console.log('TOO MANY connections');\n    }\n    else {\n      this.callMe();\n    }\n  }\n  hangUp() {\n    this.stopAllConnection();\n  }\n  callMe() {\n    this.emitBroadcast({type: 'call'});\n  }\n\n\n  componentWillUnmount() {\n    // if(this.props.isPerformer){\n    //   Swal.fire({\n    //     text: '本当にこのライブを終了しますか？',\n    //     type: 'warning',\n    //     showCancelButton: true,\n    //     confirmButtonColor: '#3085d6',\n    //     cancelButtonColor: '#d33',\n    //     confirmButtonText: 'Yes'\n    //   }).then((result) => {\n    //     if (result.value) {\n    //       this.socket.emit('CLOSE_LIVE', this.props.channel);\n    //       this.socket.close();\n    //       this.props.exitLive();\n    //       this.props.history.push('/');\n    //     }\n    //     else {\n    //       this.props.history.push('/board');\n    //     }\n    //   })\n    // }\n    this.socket.close();\n    this.props.exitLive();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {\n      classes,\n      title,\n      channel,\n      name,\n      voices,\n      members,\n      myvoice,\n      isPerformer,\n      isOpenController,\n      isOpenMemberList,\n      onChange,\n      emitVoice,\n      toggleController,\n      clickMemberList,\n      clickAwayMemberList,\n    } = this.props;\n\n    return (\n      <div className={classes.container} id={\"liveSpace\"}>\n        <BoardTopbar\n          classes={classes}\n          title={title}\n          channel={channel}\n          isPerformer={isPerformer}\n          clickLogo={toggleController}\n          clickMike={clickMemberList}\n          clickAway={clickAwayMemberList}\n          open={isOpenMemberList}\n          members={members}\n        />\n        <BoardController\n          classes={classes}\n          open={isOpenController}\n          closeController={toggleController}\n        />\n        <button type=\"button\" onClick={() => this.connect()}>start webrtc</button>\n        <video id=\"video\" autoplay=\"1\" className={classes.display}></video>\n        <div className={classes.board_message}>\n          {voices.map(voice => {\n            return <BoardMessage voice={voice} />;\n          })}\n        </div>\n        <BoardForm\n          classes={classes}\n          channel={channel}\n          name={name}\n          myvoice={myvoice}\n          sendPress={emitVoice}\n          socket={this.socket}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  title: state.title,\n  channel: state.channel,\n  name: state.name,\n  isPerformer: state.isPerformer,\n  members: state.members,\n  myvoice: state.myvoice,\n  voices: state.voices,\n  isOpenController: state.isOpenController,\n  isOpenMemberList: state.isOpenMemberList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(inputVoice(value)),\n  receiveLiveInfo: data => dispatch(receiveLiveInfo(data)),\n  emitVoice: data => dispatch(emitVoice(data)),\n  toggleController: () => dispatch(toggleController()),\n  clickMemberList: () => dispatch(clickMemberList()),\n  clickAwayMemberList: () => dispatch(clickAwayMemberList()),\n  receiveVoice: data => dispatch(receiveVoice(data)),\n  exitLive: () => dispatch(exitLive())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(withStyles(styles)(Board)));\n"]},"metadata":{},"sourceType":"module"}