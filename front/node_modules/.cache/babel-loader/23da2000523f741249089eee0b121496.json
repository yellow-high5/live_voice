{"ast":null,"code":"var _jsxFileName = \"/home/app/front/src/screens/components/BoardController.js\";\nimport React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CameraIcon from '@material-ui/icons/Camera';\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Swal from 'sweetalert2';\nvar inner_theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FCEE21\"\n    },\n    secondary: {\n      main: \"#FFFFFF\"\n    }\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#282c34!important\",\n        top: \"64px!important\",\n        height: \"calc(100vh - 144px)!important\"\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: \"#FFFFFF\"\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: \"bold\",\n        color: \"#FFFFFF\"\n      }\n    }\n  }\n});\nexport var BoardController = function BoardController(_ref) {\n  var classes = _ref.classes,\n      open = _ref.open,\n      closeController = _ref.closeController;\n  return React.createElement(MuiThemeProvider, {\n    theme: inner_theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    open: open,\n    onClose: function onClose() {\n      closeController();\n    },\n    className: classes.drawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.board_control_menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      closeController();\n      startSelfy(closeController);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CameraIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'カメラを起動',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      closeController();\n      shareScreen(closeController);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(CastConnectedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'デスクトップを表示',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      closeController();\n      openSettings(closeController);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: '設定',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })))));\n};\n\nvar startSelfy = function startSelfy() {\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || window.navigator.mozGetUserMedia;\n  window.URL = window.URL || window.webkitURL;\n  var video = document.getElementById('video'); //let localStream = null;\n\n  navigator.getUserMedia({\n    video: {\n      width: 1280,\n      height: 720\n    },\n    audio: true\n  }, function (stream) {\n    console.log(stream);\n    video.srcObject = stream;\n  }, function (err) {\n    console.log(err);\n  });\n};\n\nvar shareScreen = function shareScreen() {\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || window.navigator.mozGetUserMedia;\n  window.URL = window.URL || window.webkitURL;\n  var video = document.getElementById('video');\n  var localStream = null;\n  navigator.getUserMedia({\n    video: {\n      mediaSource: \"screen\"\n    }\n  }, function (stream) {\n    console.log(stream);\n    video.srcObject = stream;\n  }, function (err) {\n    console.log(err);\n  });\n};\n\nvar openSettings = function openSettings() {\n  Swal.fire({\n    text: 'Settings',\n    type: 'success',\n    confirmButtonColor: '#3085d6',\n    confirmButtonText: 'save'\n  }).then(function (result) {\n    console.log('save!');\n  });\n};","map":{"version":3,"sources":["/home/app/front/src/screens/components/BoardController.js"],"names":["React","MuiThemeProvider","createMuiTheme","Drawer","List","ListItem","ListItemIcon","ListItemText","CameraIcon","CastConnectedIcon","SettingsIcon","Swal","inner_theme","palette","primary","main","secondary","overrides","MuiPaper","root","backgroundColor","top","height","MuiListItemIcon","color","MuiListItemText","fontWeight","BoardController","classes","open","closeController","drawer","board_control_menu","startSelfy","shareScreen","openSettings","navigator","getUserMedia","webkitGetUserMedia","window","mozGetUserMedia","URL","webkitURL","video","document","getElementById","width","audio","stream","console","log","srcObject","err","localStream","mediaSource","fire","text","type","confirmButtonColor","confirmButtonText","then","result"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CameraIcon from '@material-ui/icons/Camera';\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Swal from 'sweetalert2';\n\nconst inner_theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FCEE21\"\n    },\n    secondary: {\n      main: \"#FFFFFF\"\n    }\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#282c34!important\",\n        top: \"64px!important\",\n        height: \"calc(100vh - 144px)!important\",\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: \"#FFFFFF\",\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: \"bold\",\n        color: \"#FFFFFF\",\n      }\n    }\n  }\n});\n\nexport const BoardController = ({ classes, open, closeController }) => {\n  return (\n    <MuiThemeProvider theme={inner_theme}>\n      <Drawer open={open} onClose={() => {closeController()}} className={classes.drawer}>\n        <List className={classes.board_control_menu}>\n          <ListItem button onClick={() => {\n            closeController();\n            startSelfy(closeController)\n          }}>\n            <ListItemIcon>\n              <CameraIcon />\n            </ListItemIcon>\n            <ListItemText primary={'カメラを起動'} />\n          </ListItem>\n          <ListItem button onClick={() => {\n            closeController();\n            shareScreen(closeController)\n          }}>\n            <ListItemIcon>\n              <CastConnectedIcon />\n            </ListItemIcon>\n            <ListItemText primary={'デスクトップを表示'} />\n          </ListItem>\n          <ListItem button onClick={() => {\n            closeController();\n            openSettings(closeController)\n          }}>\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary={'設定'} />\n          </ListItem>\n        </List>\n      </Drawer>\n    </MuiThemeProvider>\n  );\n};\n\nconst startSelfy = () => {\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || window.navigator.mozGetUserMedia;\n  window.URL = window.URL || window.webkitURL;\n\n  let video = document.getElementById('video');\n  //let localStream = null;\n  navigator.getUserMedia({video: { width: 1280, height: 720 }, audio: true},\n    function(stream) {\n      console.log(stream);\n      video.srcObject = stream;\n    },\n    function(err) {\n      console.log(err);\n    }\n  );\n}\n\nconst shareScreen = () => {\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || window.navigator.mozGetUserMedia;\n  window.URL = window.URL || window.webkitURL;\n\n  let video = document.getElementById('video');\n  let localStream = null;\n  navigator.getUserMedia({video: {mediaSource: \"screen\"} },\n    function(stream) {\n      console.log(stream);\n      video.srcObject = stream;\n    },\n    function(err) {\n      console.log(err);\n    }\n  );\n}\n\nconst openSettings = () => {\n  Swal.fire({\n    text: 'Settings',\n    type: 'success',\n    confirmButtonColor: '#3085d6',\n    confirmButtonText: 'save'\n  }).then((result) => {\n    console.log('save!')\n  })\n}\n"]},"metadata":{},"sourceType":"module"}