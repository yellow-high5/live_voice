{"ast":null,"code":"import _regeneratorRuntime from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/app/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/app/front/src/screens/components/BoardController.js\";\nimport React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\nimport CastConnectedOffIcon from '@material-ui/icons/Cast';\nimport VoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport VoiceOverOffIcon from '@material-ui/icons/VoiceOverOff';\nimport SpeakerNotesIcon from '@material-ui/icons/SpeakerNotes';\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\nvar inner_theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FCEE21\"\n    },\n    secondary: {\n      main: \"#FFFFFF\"\n    }\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#282c34!important\",\n        top: \"64px!important\",\n        height: \"calc(100vh - 144px)!important\"\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: \"#FFFFFF\"\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: \"bold\",\n        color: \"#FFFFFF\"\n      }\n    },\n    MuiSwitch: {\n      iconChecked: {\n        backgroundColor: \"#00FF02!important\"\n      },\n      bar: {\n        backgroundColor: \"#00FF02!important\"\n      },\n      icon: {\n        backgroundColor: \"#FFFFFF\"\n      }\n    }\n  }\n});\nexport var BoardController = function BoardController(_ref) {\n  var classes = _ref.classes,\n      isPerformer = _ref.isPerformer,\n      open = _ref.open,\n      closeController = _ref.closeController,\n      toggleSettings = _ref.toggleSettings,\n      onSelfy = _ref.onSelfy,\n      onScreen = _ref.onScreen,\n      onSpeaker = _ref.onSpeaker,\n      onVoice = _ref.onVoice,\n      startSelfy = _ref.startSelfy,\n      startScreen = _ref.startScreen,\n      stopVideo = _ref.stopVideo;\n  return React.createElement(MuiThemeProvider, {\n    theme: inner_theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    open: open,\n    onClose: function onClose() {\n      closeController();\n    },\n    className: classes.drawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.board_control_menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isPerformer ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, onSelfy ? React.createElement(VideocamIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : React.createElement(VideocamOffIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'セルフィー撮影',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    onChange: function onChange() {\n      if (!onSelfy) {\n        startSelfy();\n      } else {\n        stopVideo();\n      }\n\n      toggleSettings('selfy');\n    },\n    checked: onSelfy,\n    value: \"selfy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, onScreen ? React.createElement(CastConnectedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(CastConnectedOffIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'デスクトップ共有',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    onChange:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!onScreen) {\n                startScreen();\n              } else {\n                stopVideo();\n              }\n\n              toggleSettings('screen');\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })),\n    checked: onScreen,\n    value: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, onSpeaker ? React.createElement(VoiceOverIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }) : React.createElement(VoiceOverOffIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'スピーカー',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    onChange: function onChange() {\n      return toggleSettings('speaker');\n    },\n    checked: onSpeaker,\n    value: \"speaker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))) : null, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, onVoice ? React.createElement(SpeakerNotesIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }) : React.createElement(SpeakerNotesOffIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: 'ボイス表示',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    onChange: function onChange() {\n      return toggleSettings('voice');\n    },\n    checked: onVoice,\n    value: \"speaker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/home/app/front/src/screens/components/BoardController.js"],"names":["React","MuiThemeProvider","createMuiTheme","Drawer","List","ListItem","ListItemIcon","ListItemText","Switch","VideocamIcon","VideocamOffIcon","CastConnectedIcon","CastConnectedOffIcon","VoiceOverIcon","VoiceOverOffIcon","SpeakerNotesIcon","SpeakerNotesOffIcon","inner_theme","palette","primary","main","secondary","overrides","MuiPaper","root","backgroundColor","top","height","MuiListItemIcon","color","MuiListItemText","fontWeight","MuiSwitch","iconChecked","bar","icon","BoardController","classes","isPerformer","open","closeController","toggleSettings","onSelfy","onScreen","onSpeaker","onVoice","startSelfy","startScreen","stopVideo","drawer","board_control_menu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Switch from '@material-ui/core/Switch';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\nimport CastConnectedOffIcon from '@material-ui/icons/Cast';\nimport VoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport VoiceOverOffIcon from '@material-ui/icons/VoiceOverOff';\nimport SpeakerNotesIcon from '@material-ui/icons/SpeakerNotes';\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\n\nconst inner_theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FCEE21\"\n    },\n    secondary: {\n      main: \"#FFFFFF\"\n    }\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: \"#282c34!important\",\n        top: \"64px!important\",\n        height: \"calc(100vh - 144px)!important\",\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: \"#FFFFFF\",\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: \"bold\",\n        color: \"#FFFFFF\",\n      }\n    },\n    MuiSwitch: {\n      iconChecked: {\n        backgroundColor: \"#00FF02!important\",\n      },\n      bar: {\n        backgroundColor: \"#00FF02!important\",\n      },\n      icon: {\n        backgroundColor: \"#FFFFFF\",\n      },\n    }\n  }\n});\n\nexport const BoardController = ({ classes, isPerformer, open, closeController, toggleSettings, onSelfy, onScreen, onSpeaker, onVoice, startSelfy, startScreen, stopVideo }) => {\n  return (\n    <MuiThemeProvider theme={inner_theme}>\n      <Drawer open={open} onClose={() => {closeController()}} className={classes.drawer}>\n        <List className={classes.board_control_menu}>\n          {isPerformer?\n            <div>\n            <ListItem>\n              <ListItemIcon>\n                {onSelfy? <VideocamIcon /> : <VideocamOffIcon />}\n              </ListItemIcon>\n              <ListItemText primary={'セルフィー撮影'} />\n              <Switch\n                onChange={() => {\n                  if(!onSelfy){\n                    startSelfy();\n                  }\n                  else{\n                    stopVideo();\n                  }\n                  toggleSettings('selfy');\n                }}\n                checked={onSelfy}\n                value=\"selfy\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                {onScreen ? <CastConnectedIcon /> : <CastConnectedOffIcon />}\n              </ListItemIcon>\n              <ListItemText primary={'デスクトップ共有'} />\n              <Switch\n                onChange={async() => {\n                  if(!onScreen){\n                    startScreen();\n                  }\n                  else{\n                    stopVideo();\n                  }\n                  toggleSettings('screen');\n                }}\n                checked={onScreen}\n                value=\"screen\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                {onSpeaker ? <VoiceOverIcon /> : <VoiceOverOffIcon />}\n              </ListItemIcon>\n              <ListItemText primary={'スピーカー'} />\n              <Switch\n                onChange={() => toggleSettings('speaker')}\n                checked={onSpeaker}\n                value=\"speaker\"\n              />\n            </ListItem>\n            </div>\n            :\n            null\n          }\n\n          <ListItem>\n            <ListItemIcon>\n              {onVoice ? <SpeakerNotesIcon /> : <SpeakerNotesOffIcon />}\n            </ListItemIcon>\n            <ListItemText primary={'ボイス表示'} />\n            <Switch\n              onChange={() => toggleSettings('voice')}\n              checked={onVoice}\n              value=\"speaker\"\n            />\n          </ListItem>\n        </List>\n      </Drawer>\n    </MuiThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}